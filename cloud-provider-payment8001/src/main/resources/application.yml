server:
    port: 9527



spring:
   application:
         name: CLOUD-PAYMENT-SERVICE
   cloud:
     gateway:
       discovery:
         locator:
           enabled: true                               #让gateway从nacos中获取服务信息
       routes:
         - id: CLOUD-PAYMENT-SERVICE #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
           uri: lb://CLOUD-PAYMENT-SERVICE             #匹配后提供服务的路由地址
           order: 1                                    #路由优先级  数字越小越大
           predicates:
             - Path=/payment/get/**                   # 断言，路径相匹配的进行路由
           filters: #过滤器 数组 （在请求传递过程中，对请求做修改）
             - StripPrefix=1                           #在请求转发之前去掉 gateway的一层路径

   datasource:
       type: com.alibaba.druid.pool.DruidDataSource
       driver-class-name: com.mysql.jdbc.Driver
       url: jdbc:mysql://localhost:3306/db2019?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
       username: root
       password: 123456


mybatis:
      mapper-locations: classpath:mappers/*.xml
      type-aliases-package: com.atguigu.springcloud.entities
      configLocation:

nacos:
  config:
    bootstrap:
      #开启系统启动时预读取nacos的配置，用于满足@Value注入数据的场景
      enable: true
    # 配置所属命名空间的id,此处我们配置名称为dev的id，可以在命名空间列表查看id的值
    namespace: f3be4de8-02ce-4ce0-9d58-8063bb9e071f
    # 配置所属分组
    group: DEFAULT_GROUP
    # 配置ID
    data-id: com.xk.nacos.springboot
    # 配置文件类型,对应nacos配置页面的配置格式，默认是properties
    type: yaml
    # nacos服务器地址
    server-addr: localhost:8848
    # 开启自动刷新nacos配置
    auto-refresh: true
    # 针对配置项同名的情况，是否允许nacos的配置覆盖本地的配置
    remote-first: true





